[
["index.html", "Data Visualization Design Project 1 Introduction: Domain Problem Characterization", " Data Visualization Design Project Joshua Ganz, Julian Mucha &amp; Eric Rwabuhihi 2019-12-08 1 Introduction: Domain Problem Characterization Millions of people around the world like to watch football, commonly known as soccer in the United States. It is the most watched sport in Europe, Asia, and Africa. Most recently, the United States has attracted many fans, due in part to the US women’s soccer team, which has won the FIFA Women’s World Cup on four occasions since its inauguration in 1991. The goal of this project is to analyze how teams performed in the world cup in the last 28 years: country participation, goals scored, wins, and champions. It is designed for journalists, football fans and football analysts to get a glimpse into the tournament’s history, and its outcome, and write or comment about it. Our team would like to thank Amanda Peterson Plunkett who initially designed and provided the visualization of the FIFA Women’s World Cup that inspired us to use the soccer data for our own data visualization design. The initial design was a static plot and did not address the following: Ability to compare goals between years between all countries Ability to identify countries that missed the World Cup during specific years Ability to identify goals scored per a specific year and across all years Ability to compare wins per year and who the champion was Within our team’s data visualization design application, the user will be able to accomplish the above with interactivity measures. "],
["dataoperation-abstraction-design.html", " 2 Data/Operation Abstraction Design", " 2 Data/Operation Abstraction Design Five datasets were used in the data visualization design project. The “champions” dataset was created from researching the winning countries for each year of the Women’s World Cup (Credit: Wikipedia). The other data sets were gathered from github. Three files, wwc_outcomes, squads, and codes, were used in a TidyTuesday submission by Amanda Peterson Plunkett, originating from www.data.world. The fourth github file was obtained through a web search for country longitudes and latitudes. Due to the nature of the data visualization designs used, there were transformations and manipulations, using dplyr, and joins necessary to be able to use the data productively for the data tables, line graph, and bar graph: transformed and manipulated the squads data (Appendix E.1 and E.2) transformed wwc_outcomes data to include country(Appendix E.3 and E.4) transformed critique_wwc_outcomes_wcodes data to show countries and the summation of all their goals combined across all years of participation (Appendix E.5) joined critique_wwc_outcomes_wcodes data with critique_top_countries data and changed the names of China PR and Chinese Taipei (Appendix E.6) transformed critique_joined_wwc data to reflect total tournament goals by country and year (Appendix E.7) transformed critique_plot data to reflect total goals over all years per country (Appendix E.8) merged critique_plot data and critique_plot1 data, change a few of the column names, and arrange countries in alphabetical order (Appendix E.9) manipulated critique_wwc_outcomes_wcodes data yet again and joined it with the champions data to reflect how many wins a country had a particular tournament and whether they were the champion (Appendix 10) To develop the dataset needed for our map visualization, a dataset was filtered down and grouped to show the total number of goals that a country scored for a given year. The resulting data frame called “scores_by_team” was right joined to a mutated version of our “wwc_outcomes_wcodes” data frame to create the “scores_by_year” data frame. To fix an NA issue in the original data for Nigeria in the “Country” column, we replaced the NA value with “Nigeria” in records where the country’s abbreviation was “NGA”. Our “scores_by_year” data frame was then left joined with the “country_lats_longs” dataset pulled from Github to include the latitudes and longitudes to build the borders of the countries on the map. Certain country names were recoded to fall in line with the values present in the latitude and longitude dataset to complete the join properly. This resulting dataframe called “wwc_outcomes_wlatsandlongs” was finally left joined with the “world” data from the rgeos package to complete the accurate longitude and latitude data to map out our graph. A similar example generated by Sharp Sight labs in regard to oil production served as an effective springboard in the generation of our map. "],
["encodinginteraction-design.html", " 3 Encoding/Interaction Design", " 3 Encoding/Interaction Design The FIFA Women’s World Cup is a global and increasingly popular tournament. The data of interest relates to the countries and the years they participated in the tournament, the number of goals and wins by country, where the countries are located around the globe, and the players in the tournament. Building interactive visual representations are important to assist end-users in answering specific questions. It is important the interactions work properly to display correct and useful data while avoiding redundancy, creating an intuitive and positive experience for the user. The validity of whether the data visualization design is effective is not just determined by the product being successfully built but also by whether it is the right product for the user. What years did countries participate in the tournament and how many goals did they score, per year and across all tournaments? data was prepared to produce years countries participated, total goals scored per participating year*, and total goals scored across all tournaments interactive line plot created to visualize user-selected countries and their goals per year (credit: Ryan Wesslen) brushing option included in line plot to allow users the ability to select specific subsets of years and countries, which is reflected in the date generated in a data table below the line plot (Appendix A) *To generate the plot without errors, countries not participating in a particular year had to display zero goals on the plot when at least one other country was selected for a comparison. However, if the data table generates a zero for year_goals and total_goals_all_years in an observation, that country did not participate in the tournament for that year. How many wins did participating countries have during an individual tournament? Who won the tournament? data was prepared to total the wins of each participating country per tournament year, which was then joined with a data frame to add whether a team was the champion interactive bar plot created to visualize number of wins for each participating country during a specific year champion is designated with a colorblind-friendly red, while other bars a colorblind-friendly blue (Appendix B) Where around the globe are the participating countries located and what are the country goals per year? data was prepared to join latitude and longitude coordinates to the countries, as well as joining the countries with the total goals they scored by each team by year interactive map created to visualize the countries that participated during selected year and has a gradient fill to portray a comparison of each country’s total number of goals during that year’s tournament understanding processing time for this may take a few seconds, a processing spinner identifies the map is generating (Appendix C). Who are the players participating in the 2019 World Cup?** squads data was prepared interactive data table created to visualize player information such as name, country, date of birth, age, position, club team, international appearances, and international goals **Only had 2019 roster data. "],
["algorithmic-design.html", " 4 Algorithmic Design", " 4 Algorithmic Design As a whole the app runs very smoothly. All of our plots that initially ran slow were rendered in the cache as to speed up the efficiency of comparison once the graphs were initially generated. Our data tables, line graph, and bar graph all render in real-time with no noticeable lag between user input and server output. The one plot that does take some time to generate is the map. The large number of records present in the data frame used to build the map, through the use of both latitude and longitude data as well as total score data, increases the load time. A spinner was added to not jar the user’s experience during the rendering of the map. The render time of the graph may prove to be an issue in terms of scalability. Given more research into more streamlined algorithmic design and data preparation regarding this type of map would go a long way in reducing wait time and improving the user’s experience when navigating through our Shiny app. "],
["user-evaluation.html", " 5 User Evaluation", " 5 User Evaluation When building a system, an R user wants code to run fast and be efficient. However, it is not always clear where the developer should be spending their coding time to create this efficiency. However, there is a solution for this. One way to test the system is by using the profvis package in R. It is a tool that helps the developer understand how R spends its time when running the system. It provides an interactive graphical interface for visualizing data. Using Rprof, R’s built in tool for collecting profiling data, the developer can see and decide where time should be spent optimizing the code. Another way to evaluate the system is to conduct a survey. This provides the user an opportunity to offer feedback regarding various factors most important to them. The user can assess if the data visualization design meets their needs and their ability to extract insights from the data. The feedback is important for the developer to guide improvements to the system, assisting in building a product that is efficient, purposeful, and insightful. "],
["future-work.html", " 6 Future Work", " 6 Future Work Although the data visualization design is effective at delivering the data effectively, there are changes that would enhance the current system, especially if time constraints aren’t a factor. First, the map could be designed using shape files that create borders for the countries across the map. In addition, using the leaflet package would offer the ability to create interactive web maps. The rendering of the map would need to be a priority. Although there is a spinner to show processing time, increasing the rendering speed of the map would please users. Second, a visualization in which the user can pick a country and it shows who they played and the outcome, would be complementary to the total wins per year bar graph. It would explain why two countries can have the same amount of wins but why one country was the champion of the tournament and the other was not. Third, when selecting countries to visualize their total goals scored across tournament years, the current plot generates zeros for goals per year. Without the data table to offer more insight, the plot could be misleading. The user might think that the country participated in that year’s tournament but scored no goals. However, in reality, the zero is a placeholder so the graph will create the correct plot when at least one other team is selected. Therefore, re-coding, to allow for non-consecutive points to be plotted without altering what the line plot should look like, would be a significant improvement in the plot and create less of a dependency on the data table that generates when the user brushes the plot "],
["appendix.html", "Appendix", " Appendix A B C D E.1 E.2 E.3 E.4 E.5 E.6 E.7 E.8 E.9 E.10 "]
]
